{"version":3,"sources":["components/Spinner.jsx","components/Home.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["override","css","Spinner","props","state","loading","className","sizeUnit","height","radius","width","margin","color","this","React","Component","Home","duration","resultData","dataValueArray","showMenu","moduleListArray","deatailData","url","bind","dataV","setState","data","console","log","moduleDetails","axios","get","headers","then","res","lessonDetails","map","dataValue","durationStr","s","content","title","push","arr","courseDetails","modules","bank","result","index","customer","Object","keys","profilePic","expertName","qualification","id","moduleId","name","forEach","element","key","style","marginBottom","Container","Row","Col","sm","playing","class","cursor","onClick","Card","Body","Image","src","value","rounded","Title","fontSize","textAlign","Text","time","titleValue","v","passURL","Fragment","marginTop","Carousel","Item","alt","fontFamily","Caption","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.dc93ab44.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport { css } from '@emotion/core';\r\n// First way to import\r\nimport { FadeLoader } from 'react-spinners';\r\n\r\n \r\nconst override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: red;\r\n`;\r\n \r\nclass Spinner extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='sweet-loading'>\r\n        <FadeLoader\r\n          css={override}\r\n          sizeUnit={\"px\"}\r\n          height={15}\r\n          radius={2}\r\n          width={5}\r\n          margin={'2px'}\r\n          color={'#36D7B7'}\r\n          loading={this.state.loading}\r\n        />\r\n      </div> \r\n    )\r\n  }\r\n}\r\n\r\nexport default Spinner","import React from 'react';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\nimport { Button } from 'reactstrap';\r\nimport { Container,Row,Col,Card,Carousel,ListGroup } from 'react-bootstrap';\r\nimport '../index.css';\r\nimport Image from 'react-bootstrap/Image';\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport Spinner from './Spinner';\r\n\r\nconst responsive = {\r\n    superLargeDesktop: {\r\n        breakpoint: { max: 4000, min: 3000 },\r\n        items: 5,\r\n    },\r\n    desktop: {\r\n        breakpoint: { max: 3000, min: 1024 },\r\n        items: 3,\r\n    },\r\n    tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2,\r\n    },\r\n    mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1,\r\n    },\r\n};\r\n\r\n\r\nclass Home extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            duration:[],\r\n            resultData:[],\r\n            loading:false,\r\n            dataValueArray:[],\r\n            showMenu: false,\r\n            moduleListArray:[],\r\n            deatailData:[],\r\n            url:'https://oldassets.omnicuris.com/courses/video/13_07_17_12_40_08__Prevalence%20and%20Role%20of%20Thyroid%20in%20Pregnancy.mp4'\r\n        }\r\n\r\n        this.showMenu = this.showMenu.bind(this);\r\n    }\r\n\r\n    passURL(dataV){\r\n\r\n        this.setState({\r\n            url:dataV\r\n        })\r\n    }\r\n\r\n\r\n    showMenu(data) {  \r\n        console.log(\"----------->\",this.state.loading )\r\n        let moduleId = data\r\n        let moduleDetails =\"https://stgapi.omnicuris.com/api/v3/courses?courseSlug=thyroid-in-pregnancy&moduleId=\"+moduleId;\r\n        axios.get(moduleDetails, { headers : { 'hk-access-token' : '89e684ac-7ade-4cd8-bbdf-419a92f4cc5f' }} )\r\n        .then(res => {  \r\n            let moduleListArray=[]\r\n            res.data.lessonDetails.map( (dataValue) => {     \r\n                var durationStr = dataValue['userChapterDetails'].map(function(s){\r\n                    return s['durationStr']  \r\n                });\r\n\r\n                var content = dataValue['userChapterDetails'].map(function(s){\r\n                    return s['content']      \r\n                });\r\n\r\n                var title = dataValue['userChapterDetails'].map(function(s){\r\n                    return s['title']     \r\n                });\r\n               \r\n                moduleListArray.push({ 'durationStr' : durationStr , 'content':content, 'title':title})\r\n                 this.setState({\r\n                    moduleListArray: moduleListArray,\r\n                    showMenu: true\r\n                });\r\n            })\r\n        })  \r\n    }\r\n\r\n   \r\n   componentDidMount()\r\n   {\r\n\r\n    this.setState({ loading: true }, () => {\r\n\r\n    let API = \"https://stgapi.omnicuris.com/api/v3/courses?courseSlug=thyroid-in-pregnancy\"\r\n    let API2 = \" https://stgapi.omnicuris.com/api/v3/courses/thyroid-in-pregnancy/experts\"\r\n\r\n    axios.get(API2, { headers : { 'hk-access-token' : '89e684ac-7ade-4cd8-bbdf-419a92f4cc5f' }} )\r\n        .then(res => {\r\n           \r\n            this.setState({ deatailData : res.data})\r\n        })\r\n\r\n    axios.get(API, { headers : { 'hk-access-token' : '89e684ac-7ade-4cd8-bbdf-419a92f4cc5f' }} )\r\n        .then(res => {\r\n         \r\n\r\n            var arr=[]\r\n                \r\n            res.data.courseDetails.modules.map( bank => { arr.push(bank)})\r\n            this.setState({\r\n                resultData:arr,\r\n                loading:false\r\n            })\r\n        \r\n            res.data.courseDetails.modules.map((result, index) => {\r\n        })\r\n               \r\n        }) \r\n    })    \r\n   }\r\n\r\n   render()\r\n   {\r\n\r\n    var dataValueArray = [];       \r\n    this.state.resultData.map( (dataValue) => {\r\n\r\n\r\n        var customer = Object.keys(dataValue['moduleExperts']).map(function(s){return dataValue['moduleExperts'][s].profilePic});\r\n\r\n        var expertName = Object.keys(dataValue['moduleExperts']).map(function(s){return dataValue['moduleExperts'][s].expertName});\r\n\r\n        var qualification = Object.keys(dataValue['moduleExperts']).map(function(s){return dataValue['moduleExperts'][s].qualification});\r\n\r\n        var id = Object.keys(dataValue['moduleExperts']).map(function(s){return dataValue['moduleExperts'][s].moduleId});\r\n\r\n        dataValueArray.push({ 'dataValue':dataValue,'id': id , 'expertName': expertName, 'qualification': qualification , 'value': customer , 'time':dataValue.durationStr, 'name' : dataValue.name})\r\n\r\n        Object.keys(dataValue['moduleExperts']).forEach(function (element, key) {\r\n \r\n             return dataValue['moduleExperts']['moduleId'] = dataValue['id']\r\n        })\r\n  \r\n    });\r\n    return(\r\n    <div>\r\n\r\n<div className=\"macs-content\">\r\n    <div className=\"macs-content-body fade-in-up no-padder\">\r\n        <div className=\"bg-light lter b-b rema-cs-xs w-full pull-left\">\r\n            <ol className=\"breadcrumb bc-1 pull-left\" style={{ marginBottom: 0 }}>\r\n                <li>Omnicuris</li>\r\n            </ol>\r\n        </div>\r\n\r\n<Container>\r\n    <Row>\r\n        <Col sm={8}>\r\n            <section>\r\n                <div >\r\n                { \r\n                    this.state.loading === true? \r\n                     <Spinner /> : \r\n                    <ReactPlayer url={this.state.url} playing />\r\n                }\r\n                </div>\r\n            </section>\r\n        </Col>\r\n        <Col sm={4}>\r\n            <div className=\"container\">   \r\n                <div className=\"center-col\">\r\n                    {\r\n                        dataValueArray.map((result, index) => {\r\n                            return ( \r\n                                <div class=\"col ml--2\">\r\n                                    <h4 class=\"mb-0\">\r\n                                        <div class=\"col-auto\">                        \r\n                                            <a style={{ cursor: 'pointer' }} onClick={ () => this.showMenu(result.id[0])}>\r\n                                            { \r\n                                                this.state.loading ? \r\n                                                     <Spinner /> :\r\n                                                <Card >\r\n                                                    <Card.Body key={index}>\r\n                                                        <Image style={{width: '50px', height: '50px'}} src={result.value[0]} rounded />\r\n                                                        <Card.Title style={{ fontSize: 19,textAlign: 'center' }}>Module Name : <p style={{ fontSize: 14,textAlign: 'center' }}>{result.name}</p></Card.Title>\r\n                                                        <Card.Text style={{ fontSize: 19,textAlign: 'center' }}>\r\n                                                            Duration :{result.time}\r\n                                                        </Card.Text>\r\n                                                    </Card.Body>\r\n                                                </Card>\r\n                                            }\r\n                                            </a>\r\n                                        {\r\n                                \r\n                                            this.state.showMenu\r\n                                            ? (\r\n                                                this.state.moduleListArray.map((result, index) => {\r\n                                                var titleValue = result.title.map((v,index) => { return v })\r\n                                                return(\r\n                                                        <a style={{ cursor: 'pointer' }} onClick={ () => this.passURL(result.content[index])}>\r\n                                                            <div className=\"menu\">\r\n                                                                <React.Fragment>\r\n                                                                    <ul class=\"list-group\">\r\n                                                                        <li class=\"list-group-item list-group-item-primary\">{titleValue}</li>         \r\n                                                                    </ul>\r\n                                                                </React.Fragment>\r\n                                                            </div>\r\n                                                        </a>)\r\n                                                    }))\r\n                                            : (\r\n                                            null\r\n                                            )\r\n                                        }\r\n                                        </div>\r\n                                    </h4>\r\n                                </div>)\r\n                            })\r\n                    }    \r\n                </div>\r\n            </div>\r\n        </Col>\r\n    </Row>\r\n</Container>\r\n</div>\r\n</div>\r\n\r\n<div class=\"row\" style={{ marginTop:-232}}>\r\n    <div class=\"col\">\r\n        <p> Experts Panel</p>\r\n            <div className=\"about container\">\r\n       \r\n                                {\r\n                                        dataValueArray.map((result, index) => {\r\n                                            return  ( \r\n                                        <Carousel>\r\n                                            <Carousel.Item>\r\n                                                <div style={{ textAlign: 'center'}}>\r\n                                                <img\r\n                                                className=\"d-block w-100\"\r\n                                                src={result.value[0]}\r\n                                                alt=\"First slide\"\r\n                                                />\r\n                                                <div style={{ color: 'rgb(0, 129, 212)', marginTop: 15, fontFamily: 'Nunito-SemiBold' ,fontSize: 10}}>{result.expertName[0]}</div>\r\n                                                <div style={{color: 'rgb(240, 47, 114',fontSize: 10}}> {result.qualification[0]}</div>\r\n                                                </div>\r\n                                                <Carousel.Caption>\r\n                                                \r\n                                                </Carousel.Caption>\r\n                                            </Carousel.Item>\r\n                                        </Carousel>\r\n                                            )\r\n                                        })\r\n                                }            \r\n            </div>\r\n    </div>\r\n</div>\r\n</div>)}\r\n}\r\n\r\nexport default Home","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from './components/Home';\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n            <Home />\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}